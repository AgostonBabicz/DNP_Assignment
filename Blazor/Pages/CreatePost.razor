@page "/CreatePost"
@using Domain.DTOs
@using HttpClients.ClientInterfaces
@using UIComponents
@inject IPostService postService
@inject NavigationManager navMgr
@inject AuthenticationStateProvider GetAuthenticationStateAsync
<AuthorizeView>
    <Authorized>
        
        <div class="content">
            <div class="card">
                <div class="createForm">
                    <div>
                        <input class="postTitle" type="text" @bind="title" @bind:event="oninput" placeholder="Title">
                    </div>
                    <div>
                        <textarea class="postBody" @bind="body" @bind:event="oninput" placeholder="Start writing here..."></textarea>
                    </div>
                    <h5>@message</h5>
                    <Modal ShowModal="showModal">
                        <p>You have successfully added a new post</p>
                        <button @onclick="@GoOn">Wonderful</button>
                    </Modal>
                </div>
                <button class="postBtn" @onclick="Create">Post</button>
                
                <div class="rules">
                    <p>The rules of TotallyNotReddit</p>
                    <ol type="1">
                        <li>Behave like you would in real life</li>
                        <li>Don't curse a lot</li>
                        <li>Be chill ðŸ¤™</li>
                    </ol>
                </div>
                
            </div>
        </div>
        
    </Authorized>
    
    <NotAuthorized>
         <p>Please login to see create a new post.</p>
    </NotAuthorized>
</AuthorizeView>

@code {
    private bool isLoggedIn=false;
    private bool showModal;
    private string title = "";
    private string body = "";
    private string? user;
    private string message = "";
    
    protected override async Task OnInitializedAsync()
    {
        var authstate = await GetAuthenticationStateAsync.GetAuthenticationStateAsync();
        var user = authstate.User;
        if (user.Identity != null)
        {
            this.user = user.Identity.Name;
        }
    }
    
    private async Task Create()
    {
        try
        {
            await postService.CreateAsync(new PostCreationDto(user, title,body));
            showModal = true;
        }catch(Exception e)
        {
            Console.WriteLine(e);
            message = e.Message;
        }
    }
    private void GoOn()
    {
        showModal = false;
        navMgr.NavigateTo("/ViewPosts");
    }
}