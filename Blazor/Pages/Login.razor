@page "/Login"
@using HttpClients.ClientInterfaces
@inject IAuthService authService
@inject NavigationManager navMgr
<AuthorizeView>
    <NotAuthorized>
        <div class="content">
            <div class="card">
                        <div class="field">
                            <label>Username <span class="mandatory">*</span></label>
                            <input type="text" @bind="userName"/>
                        </div>
                        <div class="field">
                            <label>Password <span class="mandatory">*</span></label>
                            <input type="password" @bind="password"/>
                        </div>
                        @if (!string.IsNullOrEmpty(errorLabel))
                                                 {
                            <div class="field">
                                <label style="color: red">
                                    @errorLabel
                                </label>
                            </div>
                        }
                        <button class="logInBtn" @onclick="LoginAsync">Log in</button>
                        <div>
                            <p>New to TotallyNotReddit? <a @onclick="Register" class="link">Register here</a></p>
                        </div>
                    </div>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {
    private string userName;
    private string password;
    private string errorLabel;

    private async Task LoginAsync()
    {
        errorLabel = "";
        try
        {
            Console.WriteLine(userName);
            Console.WriteLine(password);
            await authService.LoginAsync(userName, password);
            navMgr.NavigateTo("/");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = $"Error: {e.Message}";
        }
    }

    private void Register()
    {
        navMgr.NavigateTo("/RegisterUser");
    }
}